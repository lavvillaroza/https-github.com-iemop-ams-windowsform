<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAABHtJREFUSEt1lH9QFGUYx1ePgL3b5fb2fnC3HNzG759WHpUlAs2Uk/02g6upKccZ
        Z5qhiYrGpv6xGFMzQDmsQBMcFQ/iCNFUBC8GUO5QHM8CsRo128TKrJn0r5zp6XmOW1xv8I/vvO9+3+f9
        vM/77LPLfMgw8cMZlk0ny90jY6X3/RDMl9qHXOLDDMPMQ+kqKip0OM6PSp3rysvL42L8yNpgqtFzzMUP
        MsP3ZPRd6+mCG2OjcH0oANf8PrhQvRpCC+RQjyzIGEyAWbnd7rsKCgricU6gWX9YNq0Ju7OU7+/PgT12
        Psjsy7KPTq9fC3966+Bq3cfwxye1cGXzBvhlw1o4/dgiCMjCyuhmHUFJNFeBfSl8zZmHii4rzy2FYHHe
        zU8F9p3IWlUi4+rNloLnXlkOV2o/gMsfvQ+X3quGi2+uhvOYefiJUjiSJuzJzMxM0EI7JX7xWJErNL1i
        Gfz28nLoy3OG3hISZSpRNC5SozivEP98T05KeKLyKfi5pgrOV62Cc6++AN+teBxOlC6Eoy7Rr0IDsrhl
        quReuP6aByaXlsBeR9IW8jVQuk0kWEd1IzUICdWHCl3KhOdpOIvg0888CifK3DBS6IIBp9F/PNuhTC8r
        g789z0LQnftfk8h6tFBtxvNoQleNHhK3ysLwPimpafCBAhh/8hEIlbphqEiGUwUu+B0znEavPzdVWSck
        uu4ApSrMvBQaKUgVHeS1GF7qy5KU0QcL4Swe8mvJQrhYVgyH063KRhObRnEamMqJlBZ1C6YGkagsPolN
        PZoqKFOFd8OlRUXwY3EevkgTHJI46JY4z1yZqvsJrJ4Qkbrgt3OV/U7TjclcJ/y0IAMmitLhoNMIBxwc
        7Eftc3B/taYZ02OhmudZsE5tKYIOOAUIZzpgMs8FZ/Jd4HMkTX0uJm7vQeiMePDbDRdUKDFoHn2mss7U
        Vu2KToQeSTHCuGyFcJYE4RwnfUkK9TvFtVrZN/x2HrrtHPgR3pGs95KvhUbHmSsQdLeVq/wGN42minAS
        wacyHNArCf+oUBXwpcXw9lcY15XMAY1tDn5JDPRWVzSLXH6Xjft3UDLCcQQHZRtCTbCOi7+tT0mUxFaR
        bfQhmNRu45SVspyogVISM/X12QxKH17vW0mAEQQPOE3QJCTc9kVpXxT59UKCvx3Be20GaLMaKDaSJB2M
        c2b+TquhscdqgMN4rYDDCIEUE7Ra9OO0+U5QmpOaRfbYLhsHu3H/5mRNl7Rgo7ej2Ys6mMxDP4I7MLDO
        zOfOBY151r2OP55tZr3SZuVgh1kfUn2mRTRs8lkM8DUuHEDwftRnItswF5Qy1UJVf70pcUkLMnYg4wsb
        vzjibzMbAgT2W7DxcWGnhbu6xqKXYjcTlOYxfmSk/q83su9uNxsADwiRz2wV2EvtaPjNeuhEcIPA1lFw
        7PVVxUK1cY0mdrgFOY1WvoTxmtiOXaIeOtBoFvVKbHDM8+wN5vJr8G/nRRaqm6nnE7K9AnsTM4faJPZF
        LRQVmWs3qz61VIwfGTdiSbwmPfwPeDLyXD6VbjYAAAAASUVORK5CYII=
</value>
  </data>
</root>